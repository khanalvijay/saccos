name: Smart Deploy (Skip Unnecessary Steps)

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Smart Deploy
      uses: appleboy/ssh-action@v0.1.5
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        port: ${{ secrets.SERVER_PORT }}
        script: |
          cd /home/pragati/htdocs/pragati.coop.np

          # Get list of changed files
          git fetch origin main
          CHANGED_FILES=$(git diff --name-only HEAD origin/main)
          echo "Changed files: $CHANGED_FILES"

          # Pull changes
          git pull origin main

          # Conditional operations based on what changed

          # Only run composer if dependencies changed
          if echo "$CHANGED_FILES" | grep -q -E "(composer\.(json|lock)|vendor/)"; then
            echo "üì¶ Dependencies changed - running composer..."
            export COMPOSER_ALLOW_SUPERUSER=1
            composer install --optimize-autoloader --no-dev --no-plugins
          fi

          # Only clear config cache if config files changed
          if echo "$CHANGED_FILES" | grep -q -E "(config/|\.env\.example)"; then
            echo "‚öôÔ∏è Config changed - clearing config cache..."
            php artisan config:clear
            php artisan config:cache
          fi

          # Only clear route cache if routes changed
          if echo "$CHANGED_FILES" | grep -q -E "(routes/|app/Http/)"; then
            echo "üõ£Ô∏è Routes changed - clearing route cache..."
            php artisan route:clear
            php artisan route:cache
          fi

          # Only clear view cache if views changed
          if echo "$CHANGED_FILES" | grep -q -E "(resources/views/|\.blade\.php)"; then
            echo "üëÄ Views changed - clearing view cache..."
            php artisan view:clear
            php artisan view:cache
          fi

          # Always clear general cache (safe)
          php artisan cache:clear

          # Always fix permissions (required)
          sudo mkdir -p storage/framework/{views,cache,sessions} storage/logs bootstrap/cache
          sudo chown -R www-data:www-data storage bootstrap/cache
          sudo chmod -R 775 storage bootstrap/cache

          echo "‚úÖ Smart deployment completed!"
